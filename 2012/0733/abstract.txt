The Package Library Extensions project can be split in three parts. First one consists of implementing a testing framework. Parameters tested could include speed, delay, corruption and package loss as well as a general record of this parameters for different package sizes. Packages passed around will be compared md5sum in order to ensure consistency is maintained.
I have used the “gettimeofday()”  time stamp difference to simulate a package timer. When a package timer expires the package is resent, the lost package count is increased and the timer is reset. This would be a very basic way of obtaining loss rate (lost packages / total packages sent).
        Performance bottlenecks should be detected  when using the above stated tests. For example, if we implement a Cyclic redundancyi check field in our package header on a very fast network there is a direct loss in performance. It is easier to resend the package that hasn't been received than to check each package.
        Having the above stated two fixed user callbacks will be added. Adding callbacks should make the program more flexible allowing user to choose between various situations. As well as enable a better error-detection.