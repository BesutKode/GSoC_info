To introduce similar features or bug fixes developers often port code from one program context to another. Ad hoc porting can produce various side effects if the source and target contexts differ. As ported edits are similar to reference edits, a syntactic program differencing tool cannot identify such semantic discrepancies. In this project we propose to develop a semantic porting analysis tool using the JPF framework. Given a pair of source and target edits as input our tool will generate test cases to manifest differences in the input-output behavior of the source and target contexts.