Link time optimization (LTO) in GCC has become mature enough to build large applications like Firefox, Chromium or Linux kernel. The optimization offers a great opportunity for additional performance improvements different from program speed or memory consumption. Large applications are motivated to reduce size of executable, either because of mobile platforms (i.e. Firefox for Android), or due to dynamic linker boot load steps such as dynamic relocations or static initializers. I will benchmark large applications from the point of view described above and I will implement LTO IPA passes that will deal with described issues.