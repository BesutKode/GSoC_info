My proposal aims at revamping the Amarok scripting interface, and adding new scripts demonstrating the new scripting API while also adding cool new features to Amarok. This involves getting rid of dangerous and obsolete methods, and adding accessors for some the new features added to Amarok over the years. Every major type will have a QtScript object representation, allowing unparalleled scripting flexibility. All the scripting API code will be fully documented, and Doxygen will be used for automatic generation of the Amarok Scripting API documentation for reference by script developers. I also plan on writing unit tests to allow automated testing of the Amarok scripting API. All of this will lead to a cleaner and more feature rich well-documented scripting API hopefully generating new interest in Amarok scripting. Other features I plan to work upon, if time permits, are allowing users to terminate long running or stuck scripts instead of forcing a restart and creating a new, feature-rich Script Console in C++.